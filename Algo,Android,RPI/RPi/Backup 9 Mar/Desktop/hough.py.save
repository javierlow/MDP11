import cv2, numpy as np, argparse

ap = argparse.ArgumentParser()
ap.add_argument("-i", "--image", help = "path to the image file")
args = vars(ap.parse_args())
img = cv2.imread(args["image"])
#convert the image to grayscale
gray = cv2.cvtColor(img,cv2.COLOR_BGR2GRAY)
#apply canny edge detection to the image
edges = cv2.Canny(gray,50,150,apertureSize = 3)
#show what the image looks like after the application of previous functions
cv2.imshow("canny'd image", edges)
cv2.waitKey(0)
#perform HoughLines on the image
lines = cv2.HoughLines(edges,1,np.pi/180,20)
for i in range(10):
	for rho, theta in lines[i]:
		a = np.cos(theta)
		b = np.sin(theta)
		x0 = a*rho
		y0 = b*rho
		x1 = int(x0 + 1000*(-b))
		y1 = int(y0 + 1000*(a))
		x2 = int(x0 - 1000*(-b))
		y2 = int(y0 - 1000*(a))		cv2.line(img,(x1,y1),(x2,y2),(0,0,255),2)
print(lines)
